{% set pathBase='inamika_backoffice_projects' %}
{% set pathBaseApi='api_projects' %}
{% extends "InamikaBackOfficeBundle::layout.html.twig" %}
{% block body %} 
{{ parent()}}
<h3 class="card-title">
    {% if app.request.attributes.get('_route_params')._breadcrumbs is defined %}
        {{ (app.request.attributes.get('_route_params')['_breadcrumbs']|last)['label'] | trans }}
    {% endif %}
    {% if is_granted('ROLE_ADMIN') %}
    <button type="button" class="btn btn-success btn-rounded pull-right" onclick="location.href='{{ path(pathBase~'_add')}}'"><i class="fa fa-plus"></i> {{ 'ADD' | trans }}</button>
    {% endif %}
</h3>
<div class="table-responsive">
    <table id="{{ pathBase }}_dataTable" class="display nowrap table table-striped table-bordered" cellspacing="0" width="100%">
    </table>
</div>

{{ form_start(formDelete, {'attr': {'id':id|default('formDelete')}}) }}
{{ form_widget(formDelete) }}
{{ form_end(formDelete) }}

{% endblock body %} 
{% block javascripts %} 
{{ parent() }}
{% include 'InamikaBackOfficeBundle:_partials:dataTableScripts.html.twig' with { pathBase:pathBase,loadData:pathBaseApi, landingRedirect:true} %}
<script type="text/javascript">
    $(function () {
        $('#{{ pathBase }}_dataTable').DataTable({
            order: [[ 1, 'desc' ]],
            "processing": false,
            "serverSide": true,
            columns: [
                { title:"Tipo",data: "projectType.name" },
                { title:"{{ 'NAME' | trans }}",data: "name" },
                { 
                    data: 'isActive', 
                    className: "text-center",
                    title: '{{ 'ACTIVE' | trans }}',
                    render: function (data, type, row) 
                    {
                        switch (data){
                            case true:
                                return '<span class="badge badge-pill badge-success">{{ 'YES' | trans }}</span>';
                                break;
                            default:
                                return '<span class="badge badge-pill badge-danger">{{ 'NO' | trans }}</span>';
                                break;
                        }
                    }
                },
                {
                    data: null,
                    orderable: false,
                    className: "text-center",
                    render: function (data, type, row) 
                    {
                        let buttons=[];
                        let buttonsHtml='';
                        buttons.push('<button data-toggle="tooltip" data-placement="top" title="Ver landing" type="button" class="btn-view btn btn-outline-success btn-circle"><i class="fa fa-eye"></i></button> ');
                        {% if is_granted('ROLE_ADMIN') %}
                        switch (row.projectType.id){
                            case "{{ constant('Inamika\\BackEndBundle\\Entity\\ProjectType::NEIGHBORHOOD') }}":
                                buttons.push('<button data-toggle="tooltip" data-placement="top" title="Ubicar unidades" type="button" class="btn-map btn btn-outline-warning btn-circle"><i class="fa fa-map-marker"></i></button> ');
                                break;
                            case "{{ constant('Inamika\\BackEndBundle\\Entity\\ProjectType::CONDOMINIUM') }}":
                                buttons.push('<button data-toggle="tooltip" data-placement="top" title="Administrar mÃ³dulos" type="button" class="btn-level btn btn-outline-warning btn-circle"><i class="fa fa-cubes"></i></button> ');
                                break;
                        }
                        buttons.push('<button data-toggle="tooltip" data-placement="top" title="Editar" type="button" class="btn-edit btn btn-outline-info btn-circle"><i class="fa fa-pencil"></i></button> ');
                        buttons.push('<button data-toggle="tooltip" data-placement="top" title="Eliminar" type="button" class="btn-remove btn btn-outline-danger btn-circle"><i class="fa fa-trash"></i></button> ');
                        {% endif %}
                        for(var i=0; i<buttons.length; i++)
                            buttonsHtml+=buttons[i];
                        return buttonsHtml;
                    }
                   
                }
            ]
        });
        $('#{{ pathBase }}_dataTable').DataTable().on( 'draw', function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
        $('#{{ pathBase }}_dataTable').on('click', 'button.btn-level', function () {
            var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
            var url="{{ path(pathBase~'_modules',{ id: 'ENTITY_ID' })}}";
            location.href=url.replace('ENTITY_ID',data.id);
        });
        $('#{{ pathBase }}_dataTable').on('click', 'button.btn-map', function () {
            var data = $('#{{ pathBase }}_dataTable').DataTable().row( $(this).parents('tr') ).data();
            var url="{{ path(pathBase~'_map',{ id: 'ENTITY_ID' })}}";
            location.href=url.replace('ENTITY_ID',data.id);
        });
        
    });
</script>
{% endblock %}